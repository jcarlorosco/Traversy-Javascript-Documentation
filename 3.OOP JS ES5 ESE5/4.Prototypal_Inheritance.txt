//Prototypal Inheritance

//Person Constructor
function Person(firstName, lastName) {
  this.firstName = firstName;
  this.lastName = lastName;
}
//Create Prototype methoid
Person.prototype.greeting = function() {
  return `Hello There ${this.firstName} ${this.lastName}`;
};
const person1 = new Person("Carlo", "Rosco");
//Person Greeting
console.log(person1.greeting());

///////////////////////////////////////////////////////////////////

//Customer constructor
function Customer(firstName, lastName, phone, membership) {
  Person.call(this, firstName, lastName);

  this.phone = phone;
  this.membership = membership;
}
//Inherit the Person prototype methods
Customer.prototype = Object.create(Person.prototype);

//Make customer.prototype return Customer()
Customer.prototype.constructor = Customer;

//Create Customer
const customer1 = new Customer("Rosie", "Perez", "123-456", "Standard");
console.log(customer1);

//Customer Greeting
Customer.prototype.greeting = function() {
  return `Hello There ${this.firstName} ${this.lastName} Welcome to our Company`;
};
console.log(customer1.greeting());
